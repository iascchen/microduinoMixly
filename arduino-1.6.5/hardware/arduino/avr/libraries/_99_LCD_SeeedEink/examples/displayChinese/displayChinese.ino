/* 
    Demo of display Chinese's APP
    displayChinese(INT8U x,INT8U y,INT16U unicode_Chinese);
*/

#include <Eink.h>
#include <SPI.h>
INT8U dimensionalData[]=
{
  0x01,0x7D,0x45,0x45,0x45,0x7D,0x01,0xFF,0x09,0xC3,0xE0,0xBE,0x85,0x23,0xEC,0x66,0x15,0xFF,0x01,0x7D,0x45,0x45,0x45,0x7D,0x01, 
  0x6B,0x27,0xD6,0xC0,0x66,0x51,0x55,0x8E,0xA4,0xCB,0x59,0xF4,0x60,0xBF,0x9A,0x88,0xBB,0xBE,0xE4,0x4C,0x99,0x14,0x44,0x22,0x77, 
  0x40,0x5F,0x51,0x51,0x51,0xDF,0x40,0x7F,0xA6,0x5A,0x7D,0x11,0x45,0xDD,0x81,0xFA,0x05,0x72,0x51,0x74,0x06,0x4A,0x22,0xE8,0xEB, 
  0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0xFF,0x7F,0x7F,0xFF,0xFF,0x7F,0xFF,0xFF,0x7F,0xFF,0x7F,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x7F,
};
void setup()
{
SPI.begin();

Eink.clearScreen();// clear the screen

Eink.displayChinese(3,156,0xBDF1);
Eink.displayChinese(3,140,0xCCEC);
Eink.displayChinese(3,124,0xC4E3);
Eink.displayChinese(3,108,0xBFEC);
Eink.displayChinese(3,92,0xC0D6);
Eink.displayChinese(3,76,0xC2F0);

Eink.displayChar(3,60,'?');
//Eink.displayChinese(3,34,0xA1F4);

Eink.displayTwoDimensionalCode(8,30);
 
Eink.refreshScreen(); //refresh the screen
}
void loop()
{}
